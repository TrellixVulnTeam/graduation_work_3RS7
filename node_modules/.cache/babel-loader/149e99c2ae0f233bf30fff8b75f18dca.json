{"ast":null,"code":"import _toConsumableArray from\"C:/graduation_work/GraduationWork_FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/graduation_work/GraduationWork_FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useCallback}from'react';import axios from'axios';import{Link,useParams}from\"react-router-dom\";import'bootstrap/dist/css/bootstrap.min.css';import'../assets/styles/all.css';import'../assets/styles/read_page.css';import Pagination from'@mui/material/Pagination';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Read=function Read(props){var idx=useParams().id;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),boardRead=_useState2[0],setBoardRead=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),replyRead=_useState4[0],setReplyRead=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),writeReply=_useState6[0],setWriteReply=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),newName=_useState8[0],setNewName=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),newPassword=_useState10[0],setNewPassword=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),newContent=_useState12[0],setNewContent=_useState12[1];var _useState13=useState(1),_useState14=_slicedToArray(_useState13,2),currentReplyPage=_useState14[0],setCurrentReplyPage=_useState14[1];var _useState15=useState(5),_useState16=_slicedToArray(_useState15,1),postsPerReplyPage=_useState16[0];useEffect(function(){axios.get(\"http://localhost:3001/read/\".concat(idx)).then(function(response){setBoardRead(response.data);console.log(response);});},[]);useEffect(function(){axios.get(\"http://localhost:3001/reply/\".concat(idx)).then(function(response){setReplyRead(response.data);console.log(response.data);});},[]);var submitReply=function submitReply(){axios.post(\"http://localhost:3001/reply/\".concat(idx),{name:newName,pw:newPassword,content:newContent});setWriteReply([].concat(_toConsumableArray(writeReply),[{board_id:idx,name:newName,pw:newPassword,content:newContent}]));window.location.reload();};var handleReplyChange=function handleReplyChange(event,value){setCurrentReplyPage(value);};var indexOfLastReplyPost=currentReplyPage*postsPerReplyPage;// 마지막 guestbook의 index 번호\nvar indexOfFirstReplyPost=indexOfLastReplyPost-postsPerReplyPage;// 첫번째 guestbook의 index 번호\nvar currentReplyPosts=replyRead.slice(indexOfFirstReplyPost,indexOfLastReplyPost);//각 페이지에서 보여질 포스트 배열\nvar pageReplyNumber=Math.ceil(replyRead.length/postsPerReplyPage);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"form\",{className:\"read_page\",method:\"post\",children:/*#__PURE__*/_jsxs(\"article\",{className:\"read_page_start\",children:[boardRead.map(function(value){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"page_top\",children:[/*#__PURE__*/_jsx(\"h4\",{children:value.title}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uC791\\uC131\\uC790 : \",value.name,\"\\xA0\\xA0|\\xA0\\xA0\\uC791\\uC131\\uC77C : \",value.date,\"\\xA0\\xA0|\\xA0\\xA0\\uC870\\uD68C\\uC218 : \",value.hit]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"page_content\",children:/*#__PURE__*/_jsx(\"p\",{children:value.content})}),/*#__PURE__*/_jsxs(\"div\",{className:\"page_comments_top\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"\\uB313\\uAE00\"}),/*#__PURE__*/_jsx(Link,{to:\"/deletepasswordcheck/\".concat(value.id),children:/*#__PURE__*/_jsx(\"button\",{className:\"page_comments_top_button\",children:\"\\uC0AD\\uC81C\"})}),/*#__PURE__*/_jsx(Link,{to:\"/updatepasswordcheck/\".concat(value.id),children:/*#__PURE__*/_jsx(\"button\",{className:\"page_comments_top_button\",children:\"\\uC218\\uC815\"})})]})]});}),/*#__PURE__*/_jsxs(\"div\",{className:\"page_comments_all\",children:[currentReplyPosts.map(function(value){return/*#__PURE__*/_jsxs(\"div\",{className:\"page_comments\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"page_comments_id\",children:/*#__PURE__*/_jsx(\"p\",{children:value.name})}),/*#__PURE__*/_jsx(\"div\",{className:\"page_comments_contents\",children:/*#__PURE__*/_jsx(\"p\",{children:value.content})}),/*#__PURE__*/_jsx(\"div\",{className:\"page_comments_date\",children:/*#__PURE__*/_jsx(\"p\",{children:value.date})}),/*#__PURE__*/_jsx(\"div\",{className:\"page_comments_button\",children:/*#__PURE__*/_jsx(Link,{to:\"/deletereplypassword/\".concat(idx,\"/\").concat(value.id),children:/*#__PURE__*/_jsx(\"button\",{className:\"page_comments_realButton\",children:\"\\uC0AD\\uC81C\"})})})]});}),/*#__PURE__*/_jsx(Pagination,{className:\"reply_pagination\",count:pageReplyNumber,defaultpage:indexOfFirstReplyPost,page:currentReplyPage,onChange:handleReplyChange,variant:\"outlined\",color:\"primary\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"page_comments_text\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"page_comments_text_id\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uB2C9\\uB124\\uC784\"}),/*#__PURE__*/_jsx(\"input\",{onChange:function onChange(e){setNewName(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"page_comments_text_pw\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uBE44\\uBC00\\uBC88\\uD638\"}),/*#__PURE__*/_jsx(\"input\",{onChange:function onChange(e){setNewPassword(e.target.value);}})]})]}),/*#__PURE__*/_jsx(\"textarea\",{onChange:function onChange(e){setNewContent(e.target.value);}}),/*#__PURE__*/_jsx(Link,{to:\"/read/\".concat(idx),style:{textDecoration:'none'},children:/*#__PURE__*/_jsx(\"button\",{className:\"page_comments_text_button\",onClick:submitReply,children:\"\\uC785\\uB825\"})})]})]})]})})});};export default Read;","map":{"version":3,"sources":["C:/graduation_work/GraduationWork_FrontEnd/src/pages/read/index.js"],"names":["React","useState","useEffect","useCallback","axios","Link","useParams","Pagination","Read","props","idx","id","boardRead","setBoardRead","replyRead","setReplyRead","writeReply","setWriteReply","newName","setNewName","newPassword","setNewPassword","newContent","setNewContent","currentReplyPage","setCurrentReplyPage","postsPerReplyPage","get","then","response","data","console","log","submitReply","post","name","pw","content","board_id","window","location","reload","handleReplyChange","event","value","indexOfLastReplyPost","indexOfFirstReplyPost","currentReplyPosts","slice","pageReplyNumber","Math","ceil","length","map","title","date","hit","e","target","textDecoration"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../assets/styles/all.css';\r\nimport '../assets/styles/read_page.css';\r\nimport Pagination from '@mui/material/Pagination';\r\n\r\nconst Read = (props) => {\r\n    const idx = useParams().id;\r\n    const [boardRead, setBoardRead] = useState([]);\r\n    const [replyRead, setReplyRead] = useState([]);\r\n    const [writeReply, setWriteReply] = useState([]);\r\n    const [newName, setNewName] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [newContent, setNewContent] = useState('');\r\n    const [currentReplyPage, setCurrentReplyPage] = useState(1);\r\n    const [postsPerReplyPage] = useState(5);\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:3001/read/${idx}`).then((response) => {\r\n            setBoardRead(response.data);\r\n            console.log(response);\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:3001/reply/${idx}`).then((response) => {\r\n            setReplyRead(response.data);\r\n            console.log(response.data);\r\n        })\r\n    }, []);\r\n\r\n    const submitReply = () => {\r\n        axios.post(`http://localhost:3001/reply/${idx}`,{\r\n            name:newName, pw:newPassword, content:newContent \r\n        });\r\n        setWriteReply([...writeReply, {board_id:idx, name:newName, pw:newPassword, content:newContent}]);\r\n        window.location.reload();\r\n    }\r\n\r\n    const handleReplyChange=(event, value) => {\r\n        setCurrentReplyPage(value);\r\n    }\r\n\r\n    const indexOfLastReplyPost = currentReplyPage * postsPerReplyPage; // 마지막 guestbook의 index 번호\r\n    const indexOfFirstReplyPost = indexOfLastReplyPost - postsPerReplyPage; // 첫번째 guestbook의 index 번호\r\n    const currentReplyPosts = replyRead.slice(indexOfFirstReplyPost, indexOfLastReplyPost); //각 페이지에서 보여질 포스트 배열\r\n    const pageReplyNumber = Math.ceil(replyRead.length/postsPerReplyPage);\r\n\r\n\r\n    return(\r\n        \r\n        <>\r\n                    <form className=\"read_page\" method=\"post\">\r\n                        <article className=\"read_page_start\">\r\n                            {boardRead.map((value) => {\r\n                                return(\r\n                                    <>\r\n                                        <div className=\"page_top\">\r\n                                            <h4>{value.title}</h4>\r\n                                            <p>작성자 : {value.name}&nbsp;&nbsp;|&nbsp;&nbsp;작성일 : {value.date}&nbsp;&nbsp;|&nbsp;&nbsp;조회수 : {value.hit}</p>\r\n                                        </div>\r\n                                        <div className=\"page_content\">\r\n                                            <p>{value.content}</p>\r\n                                        </div>\r\n                                        <div className=\"page_comments_top\">\r\n                                            <h5>댓글</h5>\r\n                                            <Link to={`/deletepasswordcheck/${value.id}`}><button className=\"page_comments_top_button\">삭제</button></Link>\r\n                                            <Link to={`/updatepasswordcheck/${value.id}`}><button className=\"page_comments_top_button\">수정</button></Link>\r\n                                        </div>\r\n                                    </>\r\n                                )\r\n                            })}\r\n                            <div className=\"page_comments_all\">\r\n                                    {currentReplyPosts.map((value) => {\r\n                                            return(\r\n                                                <div className=\"page_comments\">\r\n                                                    <div className=\"page_comments_id\">\r\n                                                        <p>{value.name}</p>\r\n                                                    </div>\r\n                                                    <div className=\"page_comments_contents\">\r\n                                                        <p>{value.content}</p>\r\n                                                    </div>\r\n                                                    <div className=\"page_comments_date\">\r\n                                                        <p>{value.date}</p>\r\n                                                    </div>\r\n                                                    <div className=\"page_comments_button\">\r\n                                                        <Link to={`/deletereplypassword/${idx}/${value.id}`}><button className=\"page_comments_realButton\">삭제</button></Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    <Pagination className=\"reply_pagination\" count={pageReplyNumber} defaultpage={indexOfFirstReplyPost} page={currentReplyPage} onChange={handleReplyChange} variant=\"outlined\" color=\"primary\"/>\r\n                                <div className=\"page_comments_text\">\r\n                                    <div>\r\n                                        <div className=\"page_comments_text_id\">\r\n                                            <p>닉네임</p>\r\n                                            <input onChange={(e) => {setNewName(e.target.value)}}></input>\r\n                                        </div>\r\n                                        <div className=\"page_comments_text_pw\">\r\n                                            <p>비밀번호</p>\r\n                                            <input onChange={(e) => {setNewPassword(e.target.value)}}></input>\r\n                                        </div>\r\n                                    </div>\r\n                                    <textarea onChange={(e) => {setNewContent(e.target.value)}}></textarea>\r\n                                    <Link to={`/read/${idx}`} style={{textDecoration:'none'}}><button className=\"page_comments_text_button\" onClick={submitReply}>입력</button></Link>\r\n                                </div>\r\n                            </div>\r\n                        </article>\r\n                    </form>\r\n        </>\r\n    ) \r\n}\r\n\r\nexport default Read;"]},"metadata":{},"sourceType":"module"}